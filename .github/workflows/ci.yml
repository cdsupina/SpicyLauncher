on:
  push:
    branches:
      - main

name: Continuous Integration

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, target: "aarch64-unknown-linux-gnu" }
          - { os: windows-latest, target: "i686-pc-windows-gnu" }
          - { os: windows-latest, target: "i686-pc-windows-msvc" }
          - { os: ubuntu-latest, target: "i686-unknown-linux-gnu" }
          - { os: macos-latest, target: "x86_64-apple-darwin" }
          - { os: windows-latest, target: "x86_64-pc-windows-gnu" }
          - { os: windows-latest, target: "x86_64-pc-windows-msvc" }
          - { os: ubuntu-latest, target: "x86_64-unknown-linux-gnu" }
        profile: ["", "--release"]
    steps:
      - uses: actions/checkout@v2
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target=${{ matrix.config.target }} ${{ matrix.profile }}

  fmt:
    runs-on: ubuntu-latest
    name: Formatting
    steps:
      - uses: actions/checkout@v2
      - name: Check Rust formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    name: Linting
    steps:
      - uses: actions/checkout@v2
      - name: Install Clippy
        run: rustup component add clippy
      - name: Run Clippy
        run: cargo clippy -- -D warnings
